[{"D:\\Hackathon\\hackathon-dashboard\\src\\index.js":"1","D:\\Hackathon\\hackathon-dashboard\\src\\App.js":"2","D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\index.js":"3","D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\cardBig\\index.js":"4","D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\cardSmall\\index.js":"5","D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\CardContainer\\index.js":"6"},{"size":230,"mtime":1632073955488,"results":"7","hashOfConfig":"8"},{"size":301,"mtime":1632117612165,"results":"9","hashOfConfig":"8"},{"size":1806,"mtime":1632146290382,"results":"10","hashOfConfig":"8"},{"size":547,"mtime":1632146302798,"results":"11","hashOfConfig":"8"},{"size":616,"mtime":1632144492109,"results":"12","hashOfConfig":"8"},{"size":673,"mtime":1632144631392,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kq72v",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},"D:\\Hackathon\\hackathon-dashboard\\src\\index.js",[],"D:\\Hackathon\\hackathon-dashboard\\src\\App.js",[],"D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\index.js",["29","30","31","32"],"D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\cardBig\\index.js",["33","34"],"D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\cardSmall\\index.js",["35","36"],"import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { useDrag } from \"react-dnd\";\r\n\r\nconst CardSmall = ({ id }) => {\r\n  const [{ isRowDragging, opacity }, dragRef] = useDrag({\r\n    type: \"CARD\",\r\n    item: {\r\n      id: id,\r\n    },\r\n    collect: (monitor) => ({\r\n      isRowDragging: monitor.isDragging(),\r\n      opacity: monitor.isDragging() ? 0.5 : 1,\r\n    }),\r\n  });\r\n\r\n  //   console.log(\"dragging\", isRowDragging);\r\n  return (\r\n    <div ref={dragRef} id={id} className=\"main-card-small\" style={{ opacity }}>\r\n      Hello smart card {id}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSmall;\r\n",["37","38"],"D:\\Hackathon\\hackathon-dashboard\\src\\components\\card\\CardContainer\\index.js",["39","40","41","42","43","44"],"import React, { Children, Component } from \"react\";\r\nimport CardBig from \"../cardBig\";\r\nimport CardSmall from \"../cardSmall\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { useDrop } from \"react-dnd\";\r\n\r\nimport \"../style.css\";\r\n\r\nconst Card = ({ children, handleDrop, handleHover }) => {\r\n  const [{ isOver }, dropRef] = useDrop({\r\n    accept: \"CARD\",\r\n    drop: (item, monitor) => handleDrop(item, monitor),\r\n    hover: (item, monitor) => handleHover(item, monitor),\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n  });\r\n  return (\r\n    <div class=\"card-container\" ref={dropRef}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n",{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":4,"column":16,"nodeType":"47","messageId":"48","endLine":4,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":38,"column":51,"nodeType":"52","messageId":"53","endLine":38,"endColumn":53},{"ruleId":"50","severity":1,"message":"51","line":41,"column":47,"nodeType":"52","messageId":"53","endLine":41,"endColumn":49},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"54","line":7,"column":12,"nodeType":"47","messageId":"48","endLine":7,"endColumn":25},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"54","line":7,"column":12,"nodeType":"47","messageId":"48","endLine":7,"endColumn":25},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"45","severity":1,"message":"59","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"60","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":15},{"ruleId":"45","severity":1,"message":"61","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":17},{"ruleId":"45","severity":1,"message":"49","line":4,"column":16,"nodeType":"47","messageId":"48","endLine":4,"endColumn":20},{"ruleId":"45","severity":1,"message":"62","line":11,"column":12,"nodeType":"47","messageId":"48","endLine":11,"endColumn":18},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'uuid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isRowDragging' is assigned a value but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'Children' is defined but never used.","'CardBig' is defined but never used.","'CardSmall' is defined but never used.","'isOver' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
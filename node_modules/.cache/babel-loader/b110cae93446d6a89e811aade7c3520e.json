{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathon\\\\hackathon-dashboard\\\\src\\\\components\\\\card\\\\index.js\";\nimport React, { Component } from \"react\";\nimport CardBig from \"./cardBig\";\nimport CardSmall from \"./cardSmall\";\nimport { v4 as uuid } from \"uuid\";\nimport CardContainer from \"./CardContainer\";\nimport \"./style.css\";\nimport * as data from \"../../json/cardData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  card\n} = data && data.default;\nconst [cards, setCards] = React.useState(card);\n\nconst handleDrop = id => {\n  const filteredCard = cards.filter(c => c.id == id);\n  const remainingCard = cards.filter(c => c.id !== id);\n  setCards(remainingCard.concat(filteredCard));\n};\n\nclass Card extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      //   <div class=\"card-container\">\n      //     <CardBig />\n      //     <CardBig />\n      //     <CardBig />\n      //     <CardSmall />\n      //     <CardSmall />\n      //   </div>\n      _jsxDEV(CardContainer, {\n        children: cards.map(item => {\n          return item && item.containerSize === \"Big\" ? /*#__PURE__*/_jsxDEV(CardBig, {\n            id: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(CardSmall, {\n            id: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["D:/Hackathon/hackathon-dashboard/src/components/card/index.js"],"names":["React","Component","CardBig","CardSmall","v4","uuid","CardContainer","data","card","default","cards","setCards","useState","handleDrop","id","filteredCard","filter","c","remainingCard","concat","Card","render","map","item","containerSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,aAAP;AAEA,OAAO,KAAKC,IAAZ,MAAsB,0BAAtB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWD,IAAI,IAAIA,IAAI,CAACE,OAA9B;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAeJ,IAAf,CAA1B;;AAEA,MAAMK,UAAU,GAAIC,EAAD,IAAQ;AACzB,QAAMC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACH,EAAF,IAAQA,EAA5B,CAArB;AACA,QAAMI,aAAa,GAAGR,KAAK,CAACM,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAA7B,CAAtB;AACAH,EAAAA,QAAQ,CAACO,aAAa,CAACC,MAAd,CAAqBJ,YAArB,CAAD,CAAR;AACD,CAJD;;AAMA,MAAMK,IAAN,SAAmBnB,SAAnB,CAA6B;AAC3BoB,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,cAAC,aAAD;AAAA,kBACGX,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAU;AACnB,iBAAOA,IAAI,IAAIA,IAAI,CAACC,aAAL,KAAuB,KAA/B,gBACL,QAAC,OAAD;AAAS,YAAA,EAAE,EAAED,IAAI,CAACT;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADK,gBAGL,QAAC,SAAD;AAAW,YAAA,EAAE,EAAES,IAAI,CAACT;AAApB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA;AATF;AAmBD;;AArB0B;;AAwB7B,eAAeM,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport CardBig from \"./cardBig\";\r\nimport CardSmall from \"./cardSmall\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport CardContainer from \"./CardContainer\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport * as data from \"../../json/cardData.json\";\r\n\r\nconst { card } = data && data.default;\r\n\r\nconst [cards, setCards] = React.useState(card);\r\n\r\nconst handleDrop = (id) => {\r\n  const filteredCard = cards.filter((c) => c.id == id);\r\n  const remainingCard = cards.filter((c) => c.id !== id);\r\n  setCards(remainingCard.concat(filteredCard));\r\n};\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      //   <div class=\"card-container\">\r\n      //     <CardBig />\r\n      //     <CardBig />\r\n\r\n      //     <CardBig />\r\n      //     <CardSmall />\r\n      //     <CardSmall />\r\n      //   </div>\r\n      <CardContainer>\r\n        {cards.map((item) => {\r\n          return item && item.containerSize === \"Big\" ? (\r\n            <CardBig id={item.id} />\r\n          ) : (\r\n            <CardSmall id={item.id} />\r\n          );\r\n        })}\r\n      </CardContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}
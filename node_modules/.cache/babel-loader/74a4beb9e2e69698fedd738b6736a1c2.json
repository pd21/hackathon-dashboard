{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathon\\\\hackathon-dashboard\\\\src\\\\components\\\\card\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport CardBig from \"./cardBig\";\nimport CardSmall from \"./cardSmall\";\nimport { v4 as uuid } from \"uuid\";\nimport CardContainer from \"./CardContainer\";\nimport \"./style.css\";\nimport * as data from \"../../json/cardData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  card\n} = data && data.default;\n\nconst Card = () => {\n  _s();\n\n  const [cards, setCards] = React.useState(card);\n  const [dragOverId, setDragOverId] = React.useState(null);\n\n  const getRow = element => {\n    if (element && element.id) {\n      return id;\n    }\n\n    return null;\n  };\n\n  const handleHover = (item, monitor) => {\n    const {\n      x,\n      y\n    } = monitor.getClientOffset();\n    const dragOverElement = document.elementFromPoint(x, y);\n    const dragOverId = getRow(dragOverElement);\n    setDragOverId(dragOverId);\n    console.log(\"hover\", x, y, dragOverElement);\n  };\n\n  const handleDrop = (item, monitor) => {\n    const filteredCard = cards.filter(c => c.id == item.id);\n    const remainingCard = cards.filter(c => c.id !== item.id);\n    setCards(remainingCard.concat(filteredCard));\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    handleDrop: handleDrop,\n    handleHover: handleHover,\n    children: cards.map(item => {\n      return item && item.containerSize === \"Big\" ? /*#__PURE__*/_jsxDEV(CardBig, {\n        id: item.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CardSmall, {\n        id: item.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"haDCY05JG1B1fbmPDn39eh81E2I=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["D:/Hackathon/hackathon-dashboard/src/components/card/index.js"],"names":["React","Component","CardBig","CardSmall","v4","uuid","CardContainer","data","card","default","Card","cards","setCards","useState","dragOverId","setDragOverId","getRow","element","id","handleHover","item","monitor","x","y","getClientOffset","dragOverElement","document","elementFromPoint","console","log","handleDrop","filteredCard","filter","c","remainingCard","concat","map","containerSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,aAAP;AAEA,OAAO,KAAKC,IAAZ,MAAsB,0BAAtB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWD,IAAI,IAAIA,IAAI,CAACE,OAA9B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAeL,IAAf,CAA1B;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACa,QAAN,CAAe,IAAf,CAApC;;AAEA,QAAMG,MAAM,GAAIC,OAAD,IAAa;AAC1B,QAAIA,OAAO,IAAIA,OAAO,CAACC,EAAvB,EAA2B;AACzB,aAAOA,EAAP;AACD;;AACD,WAAO,IAAP;AACD,GALD;;AAOA,QAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACrC,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAWF,OAAO,CAACG,eAAR,EAAjB;AACA,UAAMC,eAAe,GAAGC,QAAQ,CAACC,gBAAT,CAA0BL,CAA1B,EAA6BC,CAA7B,CAAxB;AACA,UAAMT,UAAU,GAAGE,MAAM,CAACS,eAAD,CAAzB;AACAV,IAAAA,aAAa,CAACD,UAAD,CAAb;AAEAc,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,CAArB,EAAwBC,CAAxB,EAA2BE,eAA3B;AACD,GAPD;;AASA,QAAMK,UAAU,GAAG,CAACV,IAAD,EAAOC,OAAP,KAAmB;AACpC,UAAMU,YAAY,GAAGpB,KAAK,CAACqB,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACf,EAAF,IAAQE,IAAI,CAACF,EAAjC,CAArB;AACA,UAAMgB,aAAa,GAAGvB,KAAK,CAACqB,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASE,IAAI,CAACF,EAAlC,CAAtB;AACAN,IAAAA,QAAQ,CAACsB,aAAa,CAACC,MAAd,CAAqBJ,YAArB,CAAD,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,aAAD;AAAe,IAAA,UAAU,EAAED,UAA3B;AAAuC,IAAA,WAAW,EAAEX,WAApD;AAAA,cACGR,KAAK,CAACyB,GAAN,CAAWhB,IAAD,IAAU;AACnB,aAAOA,IAAI,IAAIA,IAAI,CAACiB,aAAL,KAAuB,KAA/B,gBACL,QAAC,OAAD;AAAS,QAAA,EAAE,EAAEjB,IAAI,CAACF;AAAlB;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL,QAAC,SAAD;AAAW,QAAA,EAAE,EAAEE,IAAI,CAACF;AAApB;AAAA;AAAA;AAAA;AAAA,cAHF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArCD;;GAAMR,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport CardBig from \"./cardBig\";\r\nimport CardSmall from \"./cardSmall\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport CardContainer from \"./CardContainer\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport * as data from \"../../json/cardData.json\";\r\n\r\nconst { card } = data && data.default;\r\n\r\nconst Card = () => {\r\n  const [cards, setCards] = React.useState(card);\r\n  const [dragOverId, setDragOverId] = React.useState(null);\r\n\r\n  const getRow = (element) => {\r\n    if (element && element.id) {\r\n      return id;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleHover = (item, monitor) => {\r\n    const { x, y } = monitor.getClientOffset();\r\n    const dragOverElement = document.elementFromPoint(x, y);\r\n    const dragOverId = getRow(dragOverElement);\r\n    setDragOverId(dragOverId);\r\n\r\n    console.log(\"hover\", x, y, dragOverElement);\r\n  };\r\n\r\n  const handleDrop = (item, monitor) => {\r\n    const filteredCard = cards.filter((c) => c.id == item.id);\r\n    const remainingCard = cards.filter((c) => c.id !== item.id);\r\n    setCards(remainingCard.concat(filteredCard));\r\n  };\r\n\r\n  return (\r\n    <CardContainer handleDrop={handleDrop} handleHover={handleHover}>\r\n      {cards.map((item) => {\r\n        return item && item.containerSize === \"Big\" ? (\r\n          <CardBig id={item.id} />\r\n        ) : (\r\n          <CardSmall id={item.id} />\r\n        );\r\n      })}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}